/* eslint-disable max-len */
const enum Errors {
  HwTransportNotFoundError = 'Error occured while trying to find hw transport, make sure Ledger or Trezor is connected to your computer',
  InvalidPathError = 'Can not parse path',
  InvalidFileTypeError = 'Invalid file type of hw-signing-file',
  InvalidHwSigningFileError = 'Invalid file contents of hw-signing-file',
  InvalidRawTxFileError = 'Invalid file contents of tx-body-file',
  InvalidTxFileError = 'Invalid file contents of tx-file',
  InvalidKesVKeyFileError = 'Invalid KES verification key file',
  InvalidOpCertIssueCounterFileError = 'Invalid operational certificate issue counter file',
  InvalidNodeKeyGenInputsError = 'Invalid node key-gen inputs',
  InvalidDerivationTypeError = 'Invalid derivation type',
  TxSerializationMismatchError = 'Tx serialization mismatch',
  MetadataSerializationMismatchError = 'Metadata serialization mismatch',
  MissingHwSigningDataAtPathError = 'Can not find hw signing data by path',
  MissingHwSigningDataAtXPubKeyError = 'Can not find hw signing data by extended public key',
  UndefinedCommandError = 'command undefined',
  UnknownCertificateTypeError = 'unknown certificate type',
  TooManyPaymentFilesWithPoolRegError = 'Unexpected payment hardware signing file with pool registration certificate found',
  MissingPaymentSigningFileError = 'Missing payment hardware signing file',
  MissingStakeSigningFileError = 'Missing staking signing file',
  MissingPoolColdSigningFileError = 'Missing pool cold key signing file',
  TooManyPaymentSigningFilesError = 'Too many payment signing files',
  TooManyStakeSigningFilesError = 'Too many stake signing files',
  TooManyPoolColdSigningFilesError = 'Too many pool cold key signing files',
  TooManyMintSigningFilesError = 'Too many mint signing files',
  TooManyMultisigSigningFilesError = 'Too many multisig signing files',
  MissingSigningFileForCertificateError = 'Missing signing file for certificate',
  OwnerMultipleTimesInTxError = 'Owner multiple times in tx',
  UnsupportedRelayTypeError = 'Unsupported relay type',
  UnknownCertificateError = 'Unknown certificate',
  CantSignTxWithPoolRegError = 'Cannot sign transaction with pool registration, use "witness" subcommand instead',
  InvalidAddressError = 'Invalid address',
  LedgerOperationError = 'Ledger operation error',
  InvalidAddressParametersProvidedError = 'Invalid address parameters provided',
  InvalidKeyGenInputsError = 'Invalid key gen inputs error',
  TrezorPassphraseNotInsertableOnDevice = 'Trezor passphrase not insertable on the device',
  TrezorXPubKeyCancelled = 'Extended public key export cancelled by user',
  UnsupportedCryptoProviderCall = 'The call is not supported by the chosen crypto provider',
  MissingAuxiliaryDataSupplement = 'Missing auxiliary data supplement in response.',
  MissingGovernanceVotingSignature = 'Missing governance voting signature',
  InternalInvalidTypeError = 'Internal invalid type error',
  InvalidGovernanceVotingPublicKey = 'Invalid governance vote public key',
  InvalidGovernanceVotingWeight = 'Invalid governance vote weight',
  InvalidGovernanceVotingDelegations = 'Invalid governance voting delegations (either a single vote public key or several vote public keys with their weights are expected)',
  AuxSigningFileNotFoundForVotingRewardAddress = 'Voting rewards payment address doesn\'t match with supplied auxiliary signing keys --- Trezor does not support third-party reward addresses yet', // TODO should be removed after the support is added
  ByronSigningFilesFoundInVotingRegistration = 'Byron addresses are not allowed for voting registration',
  TrezorVersionError = 'Failed to retrieve trezor version',
  InvalidVotingRegistrationAddressType = 'Voting registration address type must be either BASE or REWARD',
  InvalidTransactionType = 'Invalid transaction type',
  InvalidScriptHashHex = 'Invalid script hash hex',
  InvalidNativeScriptFile = 'Invalid native script file',
  Unreachable = 'Unreachable code reached',
  TrezorPoolRegistrationAsOperatorNotSupported = 'Trezor does not support signing pool registration certificate as operator',
  InvalidInputError = 'Invalid input',
  InvalidCollateralInputError = 'Invalid collateral input',
  TxContainsUnfixableErrors = 'Transaction CBOR contains unfixable errors',
  TxContainsFixableErrors = 'Transaction CBOR contains fixable errors, please run "transform" or "transform-raw" command first',
  CannotTransformSignedTx = 'Transaction contains vkey witnesses, transformation would invalidate them',
  NetworkIdMismatchError = 'Provided network id differs from network id included in transaction body',
  NotEnoughOutFilesError = 'Not enough output files specified',
}

export {
  Errors,
}
